import { render, screen, fireEvent, waitFor } from '@testing-library/react';
import UserList from '@/components/UserList';
import { useUserStore } from '@/store/userStore';
import '@testing-library/jest-dom';

jest.mock('@/store/userStore');

describe('UserList Component', () => {
  const mockFetchUsers = jest.fn();

  beforeEach(() => {
    (useUserStore as unknown as jest.Mock).mockReturnValue({
      users: [
        { id: 1, name: 'Juan PÃ©rez' },
        { id: 2, name: 'MarÃ­a LÃ³pez' },
        { id: 3, name: 'Carlos GarcÃ­a' },
      ],
      fetchUsers: mockFetchUsers,
    });
  });

  afterEach(() => {
    jest.clearAllMocks();
  });

  it('deberÃ­a renderizar la lista de usuarios correctamente', async () => {
    render(<UserList />);

    // ğŸ“Œ Verifica que el tÃ­tulo se muestra
    expect(screen.getByText('Lista de Usuarios')).toBeInTheDocument();

    // ğŸ“Œ Espera a que los usuarios se rendericen
    await waitFor(() => {
      expect(screen.getByText('Juan PÃ©rez')).toBeInTheDocument();
      expect(screen.getByText('MarÃ­a LÃ³pez')).toBeInTheDocument();
      expect(screen.getByText('Carlos GarcÃ­a')).toBeInTheDocument();
    });
  });

  it('deberÃ­a llamar a fetchUsers al montar el componente', () => {
    render(<UserList />);

    expect(mockFetchUsers).toHaveBeenCalledTimes(1); // ğŸ“Œ Se llama al montar
  });

  it('deberÃ­a filtrar la lista de usuarios correctamente', async () => {
    render(<UserList />);

    // ğŸ“Œ Escribe en el input para filtrar
    fireEvent.change(screen.getByPlaceholderText('Filtrar usuarios...'), {
      target: { value: 'MarÃ­a' },
    });

    // ğŸ“Œ Espera a que la lista filtrada se actualice
    await waitFor(() => {
      expect(screen.getByText('MarÃ­a LÃ³pez')).toBeInTheDocument();
      expect(screen.queryByText('Juan PÃ©rez')).not.toBeInTheDocument();
      expect(screen.queryByText('Carlos GarcÃ­a')).not.toBeInTheDocument();
    });
  });

  it('deberÃ­a permitir la navegaciÃ³n con los enlaces de usuario', async () => {
    render(<UserList />);

    const link = screen.getByText('Juan PÃ©rez');
    expect(link).toHaveAttribute('href', '/users/1');
  });
});
